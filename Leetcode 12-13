Leetcode 12-13 Roman to Integer & Integer to Roman



package leetcode_13roman;

/**
 *
 * @author zhaos
 */
public class LeetCode_13Roman {

    /**
     * @param args the command line arguments
     */
     public static String intToRoman(int num) {
        String find[][]={
         {"","I","II","III","IV","V","VI","VII","VIII","IX"},
         {"","X","XX","XXX","XL","L","LX","LXX","LXXX","XC"},
         {"","C","CC","CCC","CD","D","DC","DCC","DCCC","CM"},
         {"","M","MM","MMM"}
     };
        StringBuffer roman = new StringBuffer();
        roman.append(find[3][num/1000 %10]);
        roman.append(find[2][num/100 % 10]);
        roman.append(find[1][num/10 % 10]);
        roman.append(find[0][num % 10]);
       
        System.out.println(roman);
        
       return null;
        
    }
    public static int romanToInt(String s) {

        int length = s.length();
        int NUM = 0;
        String dig1;
       
            for (int i = 0; i < length; i++) {
                dig1 = String.valueOf(s.charAt(i));
          
                switch (dig1) {
                    case "I":
                        NUM = NUM + 1;
                        break;
                    case "V":
                        NUM = NUM + 5;
                        if((i-1)>=0)
                        {
                            if(String.valueOf(s.charAt(i-1)).equals("I")){NUM=NUM-2;}
                        }
                        break;
                    case "X":
                        NUM = NUM + 10;
                        if((i-1)>=0)
                        {
                            if(String.valueOf(s.charAt(i-1)).equals("I")){NUM=NUM-2;}
                        }
                        break;
                    case "L":
                        NUM = NUM + 50;
                        if((i-1)>=0)
                        {
                            if(String.valueOf(s.charAt(i-1)).equals("X")){NUM=NUM-20;}
                        }
                        break;
                    case "C":
                        NUM = NUM + 100;
                        if((i-1)>=0)
                        {
                            if(String.valueOf(s.charAt(i-1)).equals("X")){NUM=NUM-20;}
                        }
                        break;
                    case "D":
                        NUM = NUM + 500;
                        if((i-1)>=0)
                        {
                            if(String.valueOf(s.charAt(i-1)).equals("C")){NUM=NUM-200;}
                        }
                        break;
                    case "M":
                        NUM = NUM + 1000;
                        if((i-1)>=0)
                        {
                            if(String.valueOf(s.charAt(i-1)).equals("C")){NUM=NUM-200;}
                        }
                        break;

                }
                
            }
      
        System.out.println(NUM);
        return NUM;
    }

    public static void main(String[] args) {
        romanToInt("DCXI");
        intToRoman(3999);
    }

}
